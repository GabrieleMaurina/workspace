<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="org.apache.commons.cli.BasicParserTest" time="0.002" tests="58" errors="34" skipped="24" failures="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="org.ekstazi.agent.AgentLoaderInitialize" value=""/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.232-b09"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/gabriele/Documents/workspace/git/misc/commons-cli-1.4-src"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/gabriele/Documents/workspace/git/misc/commons-cli-1.4-src"/>
    <property name="java.runtime.version" value="1.8.0_232-8u232-b09-0ubuntu1~18.04.1-b09"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="ekstazi.argline.internal" value="force.all=false,force.failing=false,root.dir=file:/home/gabriele/Documents/workspace/git/misc/commons-cli-1.4-src/.ekstazi/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="ekstazi.excludes.internal" value="[]"/>
    <property name="Ekstazi1228025092" value="seen"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/usr/share/maven/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-74-generic"/>
    <property name="library.jansi.path" value="/usr/share/maven/lib/jansi-native"/>
    <property name="user.home" value="/home/gabriele"/>
    <property name="user.timezone" value="Europe/Rome"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="gabriele"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher ekstazi:ekstazi"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_232"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testStopBursting2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testShortWithoutEqual" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testAmbiguousLongWithoutEqualSingleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testMissingArgWithBursting" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testStopBursting" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testPartialLongOptionSingleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testLongWithoutEqualSingleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testUnrecognizedOptionWithBursting" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testBursting" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testAmbiguousPartialLongOption1" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testAmbiguousPartialLongOption2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testAmbiguousPartialLongOption3" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testAmbiguousPartialLongOption4" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testShortWithEqual" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testNegativeOption" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser (CLI-184)"/>
  </testcase>
  <testcase name="testLongWithEqualDoubleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testLongWithEqualSingleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testUnambiguousPartialLongOption1" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testUnambiguousPartialLongOption2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testUnambiguousPartialLongOption3" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testUnambiguousPartialLongOption4" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testPropertiesOption1" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testPropertiesOption2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testDoubleDash2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <skipped message="not supported by the BasicParser"/>
  </testcase>
  <testcase name="testSimpleLong" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testSimpleShort" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMissingRequiredOption" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testReuseOptionsTwice" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMissingRequiredGroup" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testOptionGroupLong" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMissingRequiredOptions" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testShortWithUnexpectedArgument" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOverrideValues" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testStopAtNonOptionLong" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testNegativeArgument" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testStopAtUnexpectedArg" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testOptionGroup" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testLongWithoutEqualDoubleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionSingularValue" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionMultipleValues" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMissingArg" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionFlags" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionGroup" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMultipleWithLong" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testUnrecognizedOption" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionUnexpected" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testSingleDash" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testWithRequiredOption" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testUnlimitedArgs" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testPropertyOptionRequired" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testOptionAndRequiredOption" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testLongWithUnexpectedArgument1" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testLongWithUnexpectedArgument2" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testStopAtNonOptionShort" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testMultiple" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testArgumentStartingWithHyphen" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testDoubleDash1" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
  <testcase name="testStopAtExpectedArg" classname="org.apache.commons.cli.BasicParserTest" time="0">
    <error type="java.lang.NullPointerException">java.lang.NullPointerException
</error>
  </testcase>
</testsuite>