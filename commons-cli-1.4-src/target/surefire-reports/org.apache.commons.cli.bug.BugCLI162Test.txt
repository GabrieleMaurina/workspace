-------------------------------------------------------------------------------
Test set: org.apache.commons.cli.bug.BugCLI162Test
-------------------------------------------------------------------------------
Tests run: 4, Failures: 4, Errors: 0, Skipped: 0, Time elapsed: 0.002 sec <<< FAILURE! - in org.apache.commons.cli.bug.BugCLI162Test
testInfiniteLoop(org.apache.commons.cli.bug.BugCLI162Test)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: 
expected:<usage: app
 -h[,--help   This is
             a
             looooon
             g
             descrip
             ti]on
> but was:<usage: app
 -h[asdf,--help
                 Thi
                 s
                 is
                 a
                 loo
                 ooo
                 ng
                 des
                 cri
                 pti
                 ]on
>
	at org.apache.commons.cli.bug.BugCLI162Test.testInfiniteLoop(BugCLI162Test.java:63)

testLongLineChunkingIndentIgnored(org.apache.commons.cli.bug.BugCLI162Test)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: 
Long arguments did not split as expected expected:<...CLI162Test
Header
-x[],--extralongarg
 Thi...> but was:<...CLI162Test
Header
-x[asdf],--extralongarg
 Thi...>
	at org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored(BugCLI162Test.java:360)

testLongLineChunking(org.apache.commons.cli.bug.BugCLI162Test)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: 
Long arguments did not split as expected expected:<...CLI162Test
Header
-x[,--extralongarg     This
                      description
                      has
                      ReallyLongVal
                      uesThatAreLon
                      gerThanTheWid
                      thOfTheColumn
                      s and also
                      other
                      ReallyLongVal
                      uesThatAreHug
                      erAndBiggerTh
                      anTheWidthOfT
                      heColumnsBob,
                     ] yes.
Footer
> but was:<...CLI162Test
Header
-x[asdf,--extralongarg     This
                          descripti
                          on has
                          ReallyLon
                          gValuesTh
                          atAreLong
                          erThanThe
                          WidthOfTh
                          eColumns
                          and also
                          other
                          ReallyLon
                          gValuesTh
                          atAreHuge
                          rAndBigge
                          rThanTheW
                          idthOfThe
                          ColumnsBo
                          b,] yes.
Footer
>
	at org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunking(BugCLI162Test.java:342)

testPrintHelpLongLines(org.apache.commons.cli.bug.BugCLI162Test)  Time elapsed: 0 sec  <<< FAILURE!
org.junit.ComparisonFailure: 
expected:<...ug.BugCLI162Test
 -2[,--jdbc2sfmd <arg>        Converts the JDBC file in the first argument
                             to an SMFD file specified in the second
                             argument.
 -a,--paramNames <arg>       Parameter XML names; default names are
                             param1, param2, etc. Example: -a "pname1
                             pname2"
 -b,--jdbc <arg>             Writes a JDBC binding node file for the given
                             SQL
 -c,--url <arg>              Connection URL
 -d,--driver <arg>           JDBC driver class name
 -e,--description <arg>      SFMD description. A default description is
                             used if omited. Example: -e "Runs such and
                             such"
 -f,--sfmd <arg>             Writes a SFMD file for the given SQL
 -g,--printTiming            Prints timing information
 -h,--help                   Prints help and quits
 -i,--interactive            Runs in interactive mode, reading and writing
                             from the console, 'go' or '/' sends a
                             statement
 -j,--node <arg>             Writes a JDBC node file for the given SQL
                             (internal debugging)
 -l,--columnNames <arg>      Column XML names; default names column
                             labels. Example: -l "cname1 cname2"
 -m,--printMetaData          Prints metadata information
 -n,--info                   Prints driver information and properties. If
                             -c is not specified, all drivers on the
                             classpath are displayed.
 -o,--paramModes <arg>       Parameters modes (1=IN, 2=INOUT, 4=OUT,
                             0=Unknown). -o and -O are mutually exclusive.
                             Example for 2 parameters, OUT and IN: -o "4
                             1"
 -O,--paramModeNames <arg>   Parameters mode names (IN, INOUT, OUT,
                             Unknown). -o and -O are mutually exclusive.
                             Example for 2 parameters, OUT and IN: -O "OUT
                             IN"
 -p,--password <arg>         The database password for the user specified
                             with the -u option. You can obfuscate the
                             password with
                             org.mortbay.jetty.security.Password, see
                             http://docs.codehaus.org/display/JETTY/Securi
                             ng+Passwords
 -s,--sql <arg>              Runs SQL or {call stored_procedure(?, ?)} or
                             {?=call function(?, ?)}
 -t,--printStack             Prints stack traces on errors
    --trim <arg>             Trims leading and trailing spaces from all
                             column values. Column XML names can be
                             optionally specified to set which columns to
                             trim.
 -u,--user <arg>             A database user name
 -w,--outfile <arg>          Writes the SQL output to the given file
 -y,--paramTypes <arg>       Parameter types from java.sql.Types. -y and
                             -Y are mutually exclusive. Example: -y "-10
                             12"
 -Y,--paramTypeNames <arg>   Parameter java.sql.Types names. -y and -Y are
                             mutually exclusive. Example: -Y "CURSOR
                            ] VARCHAR"
> but was:<...ug.BugCLI162Test
 -2[asdf,--jdbc2sfmd <arg>        Converts the JDBC file in the first
                                 argument to an SMFD file specified in the
                                 second argument.
 -aasdf,--paramNames <arg>       Parameter XML names; default names are
                                 param1, param2, etc. Example: -a "pname1
                                 pname2"
 -basdf,--jdbc <arg>             Writes a JDBC binding node file for the
                                 given SQL
 -casdf,--url <arg>              Connection URL
 -dasdf,--driver <arg>           JDBC driver class name
 -easdf,--description <arg>      SFMD description. A default description
                                 is used if omited. Example: -e "Runs such
                                 and such"
 -fasdf,--sfmd <arg>             Writes a SFMD file for the given SQL
 -gasdf,--printTiming            Prints timing information
 -hasdf,--help                   Prints help and quits
 -iasdf,--interactive            Runs in interactive mode, reading and
                                 writing from the console, 'go' or '/'
                                 sends a statement
 -jasdf,--node <arg>             Writes a JDBC node file for the given SQL
                                 (internal debugging)
 -lasdf,--columnNames <arg>      Column XML names; default names column
                                 labels. Example: -l "cname1 cname2"
 -masdf,--printMetaData          Prints metadata information
 -nasdf,--info                   Prints driver information and properties.
                                 If -c is not specified, all drivers on
                                 the classpath are displayed.
 -nullasdf,--trim <arg>          Trims leading and trailing spaces from
                                 all column values. Column XML names can
                                 be optionally specified to set which
                                 columns to trim.
 -oasdf,--paramModes <arg>       Parameters modes (1=IN, 2=INOUT, 4=OUT,
                                 0=Unknown). -o and -O are mutually
                                 exclusive. Example for 2 parameters, OUT
                                 and IN: -o "4 1"
 -Oasdf,--paramModeNames <arg>   Parameters mode names (IN, INOUT, OUT,
                                 Unknown). -o and -O are mutually
                                 exclusive. Example for 2 parameters, OUT
                                 and IN: -O "OUT IN"
 -pasdf,--password <arg>         The database password for the user
                                 specified with the -u option. You can
                                 obfuscate the password with
                                 org.mortbay.jetty.security.Password, see
                                 http://docs.codehaus.org/display/JETTY/Se
                                 curing+Passwords
 -sasdf,--sql <arg>              Runs SQL or {call stored_procedure(?, ?)}
                                 or {?=call function(?, ?)}
 -tasdf,--printStack             Prints stack traces on errors
 -uasdf,--user <arg>             A database user name
 -wasdf,--outfile <arg>          Writes the SQL output to the given file
 -yasdf,--paramTypes <arg>       Parameter types from java.sql.Types. -y
                                 and -Y are mutually exclusive. Example:
                                 -y "-10 12"
 -Yasdf,--paramTypeNames <arg>   Parameter java.sql.Types names. -y and -Y
                                 are mutually exclusive. Example: -Y
                                 "CURSOR] VARCHAR"
>
	at org.apache.commons.cli.bug.BugCLI162Test.testPrintHelpLongLines(BugCLI162Test.java:310)

